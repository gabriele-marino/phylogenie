# ----------
# 9. BD MSAs
# ----------

# This tutorial walks you through setting up a configuration file to simulate multiple sequence alignments (MSAs) using the AliSim backend. AliSim is an external tool used to simulate MSAs, and is distributed with IQ-TREE. IQ-TREE requires separate installation if you wish to use AliSim as backend: please refer to the official IQ-TREE website at https://iqtree.github.io/ for installation instructions.

# In this example, we will generate a dataset consisting of 100 training samples, 10 validation samples, and 10 test samples. Each MSA will be simulated starting from a random BD tree and using the LG amino acid substitution model. Each MSA will have a length randomly drawn from a uniform distribution between 100 and 1000. For the trees configuration, we will use the same BD model as in example file 1-TreeSimulatorBD.yaml.

# ---------------
# General configs
# ---------------

output_dir: outputs/BD-MASs
data_type: msas
n_samples:
  train: 100
  val: 10
  test: 10
n_jobs: -1
seed: 42

# -------
# Context
# -------

context:
  L:
    type: integers
    low: 100
    high: 1000
  R_0:
    type: lognormal
    mean: 1
    sigma: 0.2
  s_t1:
    type: uniform
    low: 0
    high: 0.1
  s_t2:
    type: uniform
    low: 0.1
    high: 0.3
  n_tips:
    type: integers
    low: 50
    high: 250

# ----------------------
# Tree simulation config
# ----------------------

# The trees argument defines the configuration used to generate the trees. In this case, we will use a BD model with a constant reproduction number, a skyline sampling proportion, and a fixed infectious period.

trees:
  parameterization: BD
  reproduction_number: R_0
  sampling_proportion:
    value: [0, s_t1, s_t2]
    change_times: [1, 2]
  infectious_period: 2.5

  n_tips: n_tips

keep_trees: true # Whether to keep the generated tree files, false by default

# ----------------------
# AliSim-specific config
# ----------------------

# This section defines the backend-specific configurations for AliSim.
# The AliSim backend requires the iqtree_path to be set to the path of the IQ-TREE executable. You can also specify additional string arguments that will be passed to the AliSim command line using the args dictionary.
# In this case, we specify the amino acid substitution model (LG) using the -m model flag and the length of the MSA using the --length flag, which will be replaced by the value of the L context variable. Note that here, the value of L must be included in curly braces to indicate that it is a context variable that will be replaced with a sampled value at simulation time.
# For more information on the available arguments, please refer to the AliSim documentation at https://iqtree.github.io/doc/AliSim.

iqtree_path: "iqtree2" # Path to the IQ-TREE executable, "iqtree2" by default
args:
  -m: LG
  --length: "{L}"
